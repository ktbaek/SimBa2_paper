library(tidyverse)
library(zeallot)
library(magrittr)
library(tidymodels)
library(krisr)

# Read data sets

b655 <- read_csv('data/B655.csv')
s344 <- read_csv('data/S344.csv')
ssym <- read_csv("data/ssym.csv") 

# General functions

predict_model2 <- function(cf, data) {
  
  result <-  data %>% 
    mutate(Predicted = pred(RSA, Hdiff, Vdiff, cf)) %>% 
    rename(
      Experimental = exp_ddG
    ) %>% 
    mutate(
      Residuals = Experimental - Predicted,
      R = sqrt(rsquared(Experimental, Predicted))
    )
  
  return(result)
  
}

prediction_results <- function(df) {
  
  R <- unique(df$R)
  mae <- mae(df, truth = Experimental, estimate = Predicted)$.estimate
  mse <- msd(df, truth = Experimental, estimate = Predicted)$.estimate  * -1
  
  lm <- linear_reg() %>% 
    set_engine("lm") %>% 
    fit(Predicted ~ Experimental, data = df) %>%
    tidy()
  
  intercept <- lm %>% filter(term == "(Intercept)") %>% pull(estimate)
  slope <- lm %>% filter(term == "Experimental") %>% pull(estimate)
  
  tibble(
    "R" = R,
    "Slope" = slope,
    "Intercept" = intercept,
    "MAE" = mae,
    "MSE" = mse
  )
  
}

# Model 2 -------------------------------------------------------------

models <- readRDS("models/models_2.rds")

# Combine all combinations of train and test datasets
model_df <- expand_grid(models, by_test_data)
   
# Predict for each combination of train and test sets
pred <- function(RSA, Hdiff, Vdiff, cf) {
  
  cf[1] * RSA +
    cf[2] * Hdiff +
    cf[3] * abs(Vdiff) +
    cf[4] * RSA * Hdiff +
    cf[5] * RSA * abs(Vdiff)
  
}

predict_df <- model_df %>% 
  mutate(
    # Predict values
    prediction = map2(coefficients, test_data, ~predict_model2(.x, .y)),
    # Extract performance metrics
    metrics = map(prediction, ~prediction_results(.x))
  )


# Save models and predictions on disk
predict_df %>% 
  saveRDS("models/predict_model_2.rds")

# Model 3 -------------------------------------------------------------

models <- readRDS("models/models_3.rds")

# Combine all combinations of train and test datasets
model_df <- expand_grid(models, by_test_data)

# Predict for each combination of train and test sets
pred <- function(RSA, Hdiff, Vdiff, cf) {
  
    cf[1] * Hdiff +
    cf[2] * Vdiff +
    cf[3] * RSA * Hdiff +
    cf[4] * RSA * Vdiff
  
}

predict_df <- model_df %>% 
  mutate(
    # Predict values
    prediction = map2(coefficients, test_data, ~predict_model2(.x, .y)),
    # Extract performance metrics
    metrics = map(prediction, ~prediction_results(.x))
  )


# Save models and predictions on disk
predict_df %>% 
  saveRDS("models/predict_models_3.rds")
